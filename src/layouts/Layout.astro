---
interface Props {
	title?: string;
	description?: string;
	image?: string;
	canonicalURL?: string;
	type?: "website" | "article";
}

const {
	title = "Motorsports Legends",
	description = "Exkluzivní zlaté a stříbrné pamětní mince s legendami Formule 1. Unikátní sběratelská kolekce připomínající největší okamžiky motoristického sportu.",
	image = "/images/social-card.png",
	canonicalURL = Astro.url.href,
	type = "website"
} = Astro.props;

const siteURL = Astro.site || "https://mevea-motorsports-legends.vercel.app";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />

		<!-- Canonical URL -->
		<link rel="canonical" href={canonicalURL} />

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content={type} />
		<meta property="og:url" content={canonicalURL} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={new URL(image, siteURL).toString()} />

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={canonicalURL} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={new URL(image, siteURL).toString()} />

		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400..900&display=swap"
			rel="stylesheet"
		/>
	</head>
	<body>
		<main class="opacity-0 transition-opacity duration-300">
			<slot />
		</main>
	</body>
</html>

<script>
	import { initAllAnimations } from "../styles/animations";

	document.addEventListener("DOMContentLoaded", async () => {
		// Initialize all animations including the navbar
		initAllAnimations();

		const main = document.querySelector("main");
		if (main) {
			main.classList.remove("opacity-0");
			main.classList.add("opacity-100");
		}
		try {
			const LenisModule = await import("lenis");
			const Lenis = LenisModule.default;
			const lenis = new Lenis({
				duration: 1.2,
				easing: (t: number) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
				wheelMultiplier: 1,
				touchMultiplier: 2
			});
			function raf(time: number) {
				lenis.raf(time);
				requestAnimationFrame(raf);
			}
			requestAnimationFrame(raf);
		} catch (error) {
			console.error("Failed to initialize Lenis smooth scrolling:", error);
		}
	});
</script>
